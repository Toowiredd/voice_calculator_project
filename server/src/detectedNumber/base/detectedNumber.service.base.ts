/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, DetectedNumber as PrismaDetectedNumber } from "@prisma/client";

export class DetectedNumberServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DetectedNumberCountArgs, "select">
  ): Promise<number> {
    return this.prisma.detectedNumber.count(args);
  }

  async detectedNumbers<T extends Prisma.DetectedNumberFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.DetectedNumberFindManyArgs>
  ): Promise<PrismaDetectedNumber[]> {
    return this.prisma.detectedNumber.findMany<Prisma.DetectedNumberFindManyArgs>(
      args
    );
  }
  async detectedNumber<T extends Prisma.DetectedNumberFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.DetectedNumberFindUniqueArgs>
  ): Promise<PrismaDetectedNumber | null> {
    return this.prisma.detectedNumber.findUnique(args);
  }
  async createDetectedNumber<T extends Prisma.DetectedNumberCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DetectedNumberCreateArgs>
  ): Promise<PrismaDetectedNumber> {
    return this.prisma.detectedNumber.create<T>(args);
  }
  async updateDetectedNumber<T extends Prisma.DetectedNumberUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.DetectedNumberUpdateArgs>
  ): Promise<PrismaDetectedNumber> {
    return this.prisma.detectedNumber.update<T>(args);
  }
  async deleteDetectedNumber<T extends Prisma.DetectedNumberDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.DetectedNumberDeleteArgs>
  ): Promise<PrismaDetectedNumber> {
    return this.prisma.detectedNumber.delete(args);
  }
}
